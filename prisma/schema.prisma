// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Owner {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String           @unique
  phone          String
  password       String
  isOwner        Boolean?         @default(true)
  properties     Property[]
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  Request        Request[]
  Payment        Payment[]
  PaymentRequest PaymentRequest[]
}

model Tenant {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String           @unique
  phone          String
  isOwner        Boolean?         @default(false)
  password       String
  rentDue        Float            @default(0)
  properties     Property[]
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  Request        Request[]
  Payment        Payment[]
  PaymentRequest PaymentRequest[]
}

model Property {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  address        String
  city           String
  country        String
  rentAmount     Float
  state          String
  isRented       Boolean          @default(false)
  imageUrl       String
  type           String
  size           Int
  owner          Owner            @relation(fields: [ownerId], references: [id])
  ownerId        String
  tenant         Tenant?          @relation(fields: [tenantId], references: [id])
  tenantId       String?          @db.ObjectId
  tenantName     String?
  assignedAt     DateTime?
  balance        Float            @default(0)
  Request        Request[]
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  Payment        Payment[]
  PaymentRequest PaymentRequest[]
}

model Request {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  status     String    @default("pending")
  owner      Owner     @relation(fields: [ownerId], references: [id])
  ownerId    String
  property   Property  @relation(fields: [propertyId], references: [id])
  propertyId String
  tenant     Tenant    @relation(fields: [tenantId], references: [id])
  tenantId   String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  acceptedAt DateTime?
}

model Payment {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  propertyId String
  amount     Float
  date       DateTime
  property   Property @relation(fields: [propertyId], references: [id])
  tenant     Tenant   @relation(fields: [tenantId], references: [id])
  tenantId   String
  owner      Owner    @relation(fields: [ownerId], references: [id])
  ownerId    String
  note       String?
  address    String
  mode       String   @default("cash")
}

model PaymentRequest {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  owner      Owner     @relation(fields: [ownerId], references: [id])
  ownerId    String
  property   Property  @relation(fields: [propertyId], references: [id])
  propertyId String
  tenant     Tenant    @relation(fields: [tenantId], references: [id])
  tenantId   String
  amount     Float
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  acceptedAt DateTime?
  status     String?   @default("pending")
}
